#!/usr/bin/env python

# import random

class Solution(object):
    def dailyTemperatures(self, T):
        """
        :type T: List[int]
        :rtype: List[int]
        """

        last_index = [None] * 101
        days = [0] * len(T)
        for i in range(len(T) - 1, -1, -1):
            last_index[T[i]] = i
            for k in range(T[i], len(last_index)):
                if last_index[k] and k > T[i]:
                    days[i] = min(days[i], last_index[k] - i) if days[i] > 0 else last_index[k] - i
        return days

# class Solution(object):
#     def dailyTemperatures(self, T):
#         """
#         :type T: List[int]
#         :rtype: List[int]
#         """
#         days = []
#         for i, t in enumerate(T):
#             day = 0
#             for k in range(i + 1, len(T)):
#                 if T[k] > t:
#                     day = k - i
#                     break
#             days.append(day)
#
#         return days

inputs = [[73, 74, 75, 71, 69, 72, 76, 73],
          [78, 56, 68, 49, 54, 48, 53, 89, 94, 64, 41, 86, 53, 86, 93, 68, 72, 73, 71, 52, 67, 98, 77, 82, 32, 67, 44, 91, 92, 79, 67, 82, 30, 43, 41, 31, 81, 94, 99, 73, 53, 47, 31, 52, 69, 81, 49, 61, 58, 65, 84, 87, 54, 49, 56, 64, 99, 91, 81, 33, 82, 88, 54, 86, 99, 72, 41, 81, 40, 85, 62, 68, 32, 50, 96, 73, 49, 69, 40, 77, 35, 33, 98, 67, 80, 65, 81, 82, 95, 64, 54, 34, 32, 34, 41, 37, 46, 75, 68, 42, 47, 52, 34, 85, 51, 59, 90, 55, 74, 79, 92, 48, 85, 77, 56, 55, 41, 77, 51, 52, 64, 83, 89, 54, 51, 49, 73, 96, 57, 81, 52, 99, 36, 62, 95, 42, 54, 75, 70, 32, 78, 90, 75, 37, 34, 50, 30, 52, 82, 63, 99, 33, 46, 48, 62, 39, 49, 46, 96, 89, 83, 40, 95, 57, 75, 86, 45, 56, 98, 75, 36, 45, 38, 30, 86, 96, 41, 41, 37, 67, 96, 92, 85, 64, 73, 77, 97, 94, 37, 78, 79, 85, 94, 58, 36, 91, 83, 91, 94, 34, 84, 34, 46, 92, 96, 75, 77, 83, 83, 66, 68, 46, 32, 87, 81, 37, 64, 53, 87, 90, 92, 66, 69, 30, 69, 44, 73, 35, 87, 46, 56, 65, 79, 85, 57, 91, 51, 94, 58, 90, 78, 37, 45, 85, 79, 52, 98, 74, 58, 61, 98, 90, 36, 89, 61, 92, 48, 92, 34, 68, 57, 43, 82, 66, 93, 91, 54, 95, 95, 62, 89, 92, 65, 47, 74, 39, 37, 32, 56, 93, 54, 72, 66, 89, 51, 80, 46, 43, 94, 30, 91, 74, 71, 92, 72, 65, 59, 43, 54, 68, 81, 52, 63, 93, 81, 34, 49, 95, 88, 66, 99, 62, 58, 42, 56, 50, 63, 51, 64, 78, 69, 55, 80, 79, 60, 51, 68, 67, 95, 55, 91, 68, 31, 31, 85, 36, 77, 38, 91, 48, 43, 76, 99, 39, 37, 40, 86, 91, 54, 96, 77, 57, 95, 53, 75, 86, 38, 34, 91, 54, 81, 31, 85, 92, 55, 89, 62, 65, 78, 59, 48, 99, 81, 55, 89, 68, 46, 78, 45, 54, 46, 40, 82, 87, 88, 46, 30, 61, 41, 93, 91, 86, 76, 55, 50, 56, 83, 51, 52, 51, 94, 63, 61, 82, 46, 59, 69, 58, 31, 38, 94, 46, 82, 44, 64, 57, 88, 51, 47, 50, 43, 93, 93, 51, 76, 32, 39, 44, 98, 46, 73, 32, 55, 92, 72, 55, 96, 97, 39, 85, 53, 97, 67, 77, 65, 96, 92, 62, 90, 45, 78, 60, 63, 83, 98, 62, 64, 44, 57, 94, 90, 64, 31, 33, 79, 98, 56, 38, 37, 38, 61, 72, 54, 81, 53, 31, 43, 62, 40, 39, 64, 83, 60, 81, 96, 87, 55, 89, 30, 43, 46, 93, 88, 51, 79, 55, 79, 85, 56, 43, 53, 56, 49, 33, 70, 75, 87, 30, 69, 91, 85, 70, 88, 75, 90, 31, 47, 55, 56, 94, 58, 50, 68, 84, 32, 87, 48, 34, 36, 78, 88, 77, 72, 40, 50, 52, 85, 53, 42, 57, 51, 44, 51, 95, 76, 46, 98, 62, 32, 47, 51, 53, 98, 84, 98, 32, 57, 71, 65, 79, 44, 36, 59, 78, 96, 88, 42, 33, 60, 67, 94, 67, 81, 86, 47, 53, 69, 58, 63, 98, 65, 93, 83, 41, 88, 48, 68, 93, 89, 69, 87, 51, 65, 97, 81, 40, 58, 69, 36, 41, 91, 89, 72, 92, 77, 89, 35, 44, 91, 37, 37, 39, 69, 67, 30, 71, 33, 52, 70, 67, 62, 31, 98, 58, 45, 86, 57, 74, 48, 83, 93, 91, 67, 78, 74, 41, 57, 43, 75, 95, 42, 97, 76, 49, 76, 50, 30, 40, 71, 54, 95, 72, 69, 41, 38, 67, 99, 89, 56, 70, 56, 44, 77, 90, 99, 89, 52, 44, 81, 88, 52, 67, 62, 38, 51, 73, 76, 80, 82, 64, 45, 98, 33, 39, 63, 53, 96, 68, 32, 36, 57, 32, 97, 80, 58, 32, 97, 67, 67, 54, 83, 89, 91, 82, 50, 90, 92, 32, 85, 77, 66, 98, 52, 52, 77, 53, 69, 42, 84, 39, 40, 98, 71, 46, 41, 60, 58, 69, 69, 46, 68, 58, 96, 36, 93, 84, 92, 73, 74, 74, 38, 62, 72, 79, 75, 30, 89, 51, 52, 84, 69, 66, 70, 32, 74, 97, 36, 62, 90, 79, 93, 59, 69, 45, 85, 50, 37, 61, 40, 48, 72, 62, 37, 45, 52, 37, 76, 90, 39, 69, 41, 88, 66, 62, 47, 71, 79, 83, 81, 78, 67, 96, 95, 66, 73, 48, 35, 60, 32, 59, 50, 35, 93, 60, 65, 89, 37, 81, 95, 76, 91, 88, 65, 64, 66, 66, 93, 71, 55, 32, 44, 74, 66, 68, 94, 63, 48, 37, 48, 82, 82, 51, 63, 48, 47, 86, 64, 97, 96, 85, 73, 59, 99, 60, 74, 42, 96, 88, 36, 57, 93, 42, 65, 32, 56, 90, 72, 55, 59, 55, 36, 58, 48, 92, 92, 77, 77, 71, 73, 62, 43, 41, 47, 38, 50, 61, 40, 86, 64, 58, 94, 36, 31, 60, 42, 83, 53, 83, 88, 77, 62, 64, 79, 52, 74, 56, 73, 37, 90, 87, 53, 55, 32, 68, 97, 56, 58, 44, 55, 66, 87, 88, 82, 91, 78, 69, 99, 65, 86, 41, 96, 56, 37, 91, 96, 74, 53, 87, 98, 61, 50, 68, 72, 87, 33, 75, 96, 93, 84, 87, 96, 35, 69, 45, 49, 36, 59, 36, 92, 82, 31, 92, 80, 73, 37, 84, 74, 52, 64, 39, 49, 90, 87, 90, 34, 97, 34, 91, 38, 73, 83, 41, 46, 66, 65, 52, 32, 84, 74, 64, 35, 34, 71, 47, 97, 67, 91, 48, 30, 67, 77, 70, 95, 40, 69, 43, 74, 36, 54, 58]]
expecteds = [[1, 1, 4, 2, 1, 1, 0, 0],
             [7, 1, 5, 1, 3, 1, 1, 1, 13, 2, 1, 3, 1, 1, 7, 1, 1, 4, 3, 1, 1, 17, 1, 4, 1, 2, 1, 1, 9, 2, 1, 6, 1, 3, 2, 1, 1, 1, 0, 6, 4, 2, 1, 1, 1, 5, 1, 2, 1, 1, 1, 5, 2, 1, 1, 1, 0, 7, 2, 1, 1, 3, 1, 1, 0, 2, 1, 2, 1, 5, 1, 3, 1, 1, 8, 4, 1, 2, 1, 3, 2, 1, 49, 1, 2, 1, 1, 1, 39, 8, 7, 3, 1, 1, 2, 1, 1, 6, 5, 1, 1, 2, 1, 3, 1, 1, 4, 1, 1, 1, 17, 1, 10, 8, 3, 2, 1, 4, 1, 1, 1, 1, 5, 3, 2, 1, 1, 4, 1, 2, 1, 0, 1, 1, 16, 1, 1, 3, 2, 1, 1, 9, 6, 2, 1, 2, 1, 1, 2, 1, 0, 1, 1, 1, 4, 1, 2, 1, 10, 3, 2, 1, 6, 1, 1, 3, 1, 1, 142, 5, 1, 3, 2, 1, 1, 11, 3, 2, 1, 1, 6, 5, 4, 1, 1, 1, 60, 17, 1, 1, 1, 1, 12, 2, 1, 3, 1, 1, 6, 1, 3, 1, 1, 1, 42, 1, 1, 6, 5, 1, 3, 2, 1, 6, 4, 1, 2, 1, 1, 1, 17, 1, 4, 1, 2, 1, 2, 1, 7, 1, 1, 1, 1, 2, 1, 2, 1, 9, 1, 7, 3, 1, 1, 3, 2, 1, 64, 3, 1, 1, 60, 4, 1, 2, 1, 9, 1, 7, 1, 3, 2, 1, 2, 1, 3, 2, 1, 43, 42, 1, 1, 8, 2, 1, 5, 3, 2, 1, 1, 9, 1, 2, 1, 5, 1, 3, 2, 1, 19, 1, 3, 2, 1, 10, 6, 4, 3, 1, 1, 1, 3, 1, 1, 4, 3, 1, 1, 3, 2, 1, 0, 5, 4, 1, 2, 1, 2, 1, 1, 3, 2, 1, 6, 5, 2, 1, 2, 1, 14, 1, 12, 3, 2, 1, 4, 1, 2, 1, 4, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 22, 2, 1, 19, 1, 1, 3, 2, 1, 5, 1, 2, 1, 1, 8, 1, 6, 1, 1, 3, 2, 1, 0, 2, 1, 15, 2, 1, 5, 1, 3, 2, 1, 1, 1, 5, 2, 1, 2, 1, 11, 10, 9, 4, 2, 1, 1, 4, 1, 2, 1, 28, 2, 1, 7, 1, 1, 4, 3, 1, 1, 18, 1, 4, 1, 2, 1, 5, 4, 1, 2, 1, 7, 6, 1, 4, 1, 1, 1, 228, 1, 3, 1, 1, 3, 2, 1, 1, 17, 1, 2, 1, 13, 1, 2, 1, 9, 8, 1, 6, 1, 3, 1, 1, 1, 202, 1, 3, 1, 1, 6, 5, 3, 1, 1, 1, 191, 4, 3, 1, 1, 1, 2, 1, 8, 3, 1, 1, 3, 2, 1, 1, 3, 1, 1, 62, 2, 1, 4, 1, 1, 1, 28, 17, 1, 3, 1, 1, 9, 6, 1, 1, 3, 2, 1, 1, 1, 3, 1, 1, 10, 2, 1, 2, 1, 5, 1, 1, 1, 1, 24, 2, 1, 1, 2, 1, 5, 3, 1, 1, 1, 13, 5, 4, 1, 1, 1, 7, 2, 1, 4, 3, 1, 1, 3, 2, 1, 110, 5, 1, 1, 1, 1, 104, 1, 102, 1, 1, 2, 1, 5, 2, 1, 1, 1, 15, 5, 2, 1, 1, 1, 9, 1, 1, 6, 1, 1, 3, 1, 1, 77, 1, 12, 2, 1, 3, 1, 1, 6, 5, 1, 3, 1, 1, 29, 6, 1, 1, 3, 1, 1, 3, 2, 1, 19, 1, 3, 1, 1, 14, 2, 1, 1, 3, 2, 1, 7, 1, 1, 4, 3, 2, 1, 34, 2, 1, 5, 1, 2, 1, 1, 9, 8, 1, 6, 4, 1, 2, 1, 1, 2, 1, 15, 8, 1, 6, 3, 1, 1, 2, 1, 6, 5, 4, 2, 1, 1, 0, 6, 1, 3, 2, 1, 1, 1, 0, 16, 2, 1, 1, 12, 1, 4, 3, 1, 1, 1, 1, 1, 3, 2, 1, 161, 1, 1, 2, 1, 6, 5, 1, 1, 2, 1, 19, 3, 2, 1, 15, 3, 2, 1, 1, 1, 4, 2, 1, 1, 5, 1, 3, 2, 1, 131, 2, 1, 4, 1, 2, 1, 3, 1, 1, 121, 10, 2, 1, 2, 1, 5, 4, 1, 2, 1, 23, 1, 21, 1, 19, 1, 5, 4, 1, 1, 1, 3, 2, 1, 9, 1, 1, 6, 2, 1, 2, 1, 1, 87, 1, 1, 2, 1, 31, 1, 2, 1, 13, 2, 1, 3, 1, 1, 6, 5, 1, 1, 2, 1, 1, 14, 1, 2, 1, 10, 3, 2, 1, 1, 1, 4, 3, 2, 1, 46, 45, 1, 8, 2, 1, 5, 1, 3, 2, 1, 6, 1, 1, 3, 1, 1, 29, 1, 6, 5, 2, 1, 2, 1, 8, 4, 3, 1, 1, 3, 1, 1, 13, 4, 3, 1, 1, 6, 5, 1, 3, 2, 1, 2, 1, 5, 4, 3, 2, 1, 0, 1, 2, 1, 58, 3, 1, 1, 30, 1, 3, 1, 1, 8, 7, 1, 5, 2, 1, 2, 1, 17, 16, 12, 11, 1, 9, 8, 2, 1, 2, 1, 1, 2, 1, 3, 2, 1, 24, 2, 1, 2, 1, 3, 1, 1, 10, 3, 1, 1, 6, 1, 4, 1, 2, 1, 6, 5, 1, 2, 1, 1, 12, 1, 3, 1, 1, 1, 1, 2, 1, 3, 2, 1, 0, 1, 2, 1, 8, 2, 1, 1, 4, 2, 1, 1, 0, 2, 1, 1, 1, 3, 1, 1, 29, 3, 1, 1, 25, 1, 6, 1, 2, 1, 2, 1, 17, 2, 1, 14, 3, 2, 1, 6, 5, 1, 3, 1, 1, 4, 1, 2, 1, 0, 1, 17, 1, 1, 7, 1, 1, 4, 3, 2, 1, 7, 6, 3, 2, 1, 2, 1, 0, 1, 6, 2, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 1, 0]]

# inputs.append([random.randrange(30, 100) for i in range(1000)])
# expecteds.append(inputs[-1])

if __name__ == '__main__':
    s = Solution()
    for input, expected in zip(inputs, expecteds):
        actual = s.dailyTemperatures(input)
        print(f"input: {input}")
        print(f"expected: {expected}")
        print(f"actual: {actual}")
        print(f"{actual == expected}")
        print()
